cmake_minimum_required(VERSION 3.24)
project(infinity_compiler C)

set(CMAKE_C_STANDARD 23)

add_executable(infinity_compiler main.c config/globals.c config/globals.h lexer/lexer.c lexer/lexer.h token/token.c token/token.h list/list.c list/list.h compiler/compiler.c compiler/compiler.h io/io.c io/io.h types/types.c types/types.h ast/ast.c ast/ast.h variable/variable.c variable/variable.h logging/logging.c logging/logging.h parser/parser.c parser/parser.h expression_evaluator/expression_evaluator.h expression_evaluator/expression_evaluator.c symbol_table/symbol_table.c symbol_table/symbol_table.h symbol_table/symbol/symbol.c symbol_table/symbol/symbol.h semantic_analyzer/semantic_analyzer.c semantic_analyzer/semantic_analyzer.h scope_stack/scope/scope.c scope_stack/scope/scope.h scope_stack/scope_stack.c scope_stack/scope_stack.h hash_table/hash_table.c hash_table/hash_table.h hash_table/table_entry.c hash_table/table_entry.h config/table_initializers.c config/table_initializers.h config/constants.h lexer/token_parsers.c lexer/token_parsers.h expression_evaluator/operator_appliers.c expression_evaluator/operator_appliers.h config/console_colors.h code_generator/code_generator.c code_generator/code_generator.h code_generator/register_handler.c code_generator/register_handler.h code_generator/instruction_generators.c code_generator/instruction_generators.h code_generator/operator_generators/operator_generators.c code_generator/operator_generators/operator_generators.h symbol_table/string_repository/string_symbol.c symbol_table/string_repository/string_symbol.h symbol_table/string_repository/string_repository.c symbol_table/string_repository/string_repository.h code_generator/builtin_function_generators.c code_generator/builtin_function_generators.h options_parser/options_parser.c options_parser/options_parser.h)
#add_executable(infinity_compiler main.c io/io.h io/io.c)
